//THIS FILE IS GENERATED BY tabtool, DO NOT EDIT IT!
//GENERATE TIME [2021/4/16 23:51:10]

using System.Collections;
using System.Collections.Generic;
using System.Data;

namespace tabtool
{

    public class tbsChessTypeItem
    {
        public int id;
        public int color;
        public int type;
        public string alias;
        public string name;
        public int posx;
        public int posy;
        public string ps;
    }

    public class cfgChessTypeTable : TableManager<tbsChessTypeItem, cfgChessTypeTable>
    {
        public override bool Load()
        {
            TableReader tr = new TableReader();
            DataReader dr = new DataReader();
            DataTable dt = tr.ReadFile(MyConfig.WorkDir+"ChessType.txt");

            foreach(DataRow row in dt.Rows)
            {
                var item = new tbsChessTypeItem();
                  item.id = dr.GetInt(row["id"].ToString());
                  item.color = dr.GetInt(row["color"].ToString());
                  item.type = dr.GetInt(row["type"].ToString());
                  item.alias = (row["alias"].ToString());
                  item.name = (row["name"].ToString());
                  item.posx = dr.GetInt(row["posx"].ToString());
                  item.posy = dr.GetInt(row["posy"].ToString());
                  item.ps = (row["ps"].ToString());
                  m_Items[item.id] = item;
            }
            return true;
        }
    }


    public class tbsGlobalCfgItem
    {
        public int id;
        public string ServerIP;
        public int ServerPort;
    }

    public class cfgGlobalCfgTable : TableManager<tbsGlobalCfgItem, cfgGlobalCfgTable>
    {
        public override bool Load()
        {
            TableReader tr = new TableReader();
            DataReader dr = new DataReader();
            DataTable dt = tr.ReadFile(MyConfig.WorkDir+"GlobalCfg.txt");

            foreach(DataRow row in dt.Rows)
            {
                var item = new tbsGlobalCfgItem();
                  item.id = dr.GetInt(row["id"].ToString());
                  item.ServerIP = (row["ServerIP"].ToString());
                  item.ServerPort = dr.GetInt(row["ServerPort"].ToString());
                  m_Items[item.id] = item;
            }
            return true;
        }
    }

    public class TableConfig : SingletonTable<TableConfig>
    {
        public bool LoadTableConfig()
        {
            if (!cfgChessTypeTable.Instance.Load()) return false;
            if (!cfgGlobalCfgTable.Instance.Load()) return false;
            return true;
        }
    }
}
